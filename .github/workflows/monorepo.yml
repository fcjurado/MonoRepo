name: Monorepo

on: 
  workflow_dispatch:
  push:
    branches: main

jobs:
  listfiles:
    runs-on: ubuntu-latest
    outputs:
      changedfiles: ${{ steps.listchangedfiles.outputs.changedfiles }}
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: 'Micros/'

      - name: List all changed files
        id: listchangedfiles
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          ARRAY=()
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            ARRAY+=($file)
          done
          echo "DEBUG: All changed files: $ARRAY"
          echo "${ARRAY[@]}"
          matrix=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${ARRAY[@]}")
          m=$(echo $matrix | tr -d \")
          echo "DEBUG: Json Matrix: $m"
          echo "changedfiles=$(echo ${m})" >> GITHUB_OUTPUT
          echo ${{ steps.listchangedfiles.outputs.changedfiles }}

      - name: Test
        run: |
          echo ${{ steps.listchangedfiles.outputs.changedfiles }}


  test:
    needs: listfiles
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          echo "DEBUG: ${{ needs.listfiles.outputs.changedfiles }}"     


  changedfiles:
    needs: listfiles
    if: ${{ needs.listfiles.outputs.changedfiles != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        changedfiles: ${{ fromJson(needs.listfiles.outputs.changedfiles) }}
      max-parallel: 3
    steps:
      - name: Download files from repo
        uses: actions/checkout@v4

      - name: Print matrix var
        run: |
          echo "DEBUG: Matrix component"

